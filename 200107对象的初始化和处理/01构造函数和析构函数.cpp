//#include<iostream>
//using namespace std;
//
//int main()
//{
//
//	system("pause");
//	return 0;
//}
//编译器提供的构造函数和析构函数是空实现
//构造函数：主要作用于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用
//析构函数：主要作用于在于对象销毁系统自动调用，执行一些清理工作

//构造函数语法：
//类名(){};

//析构函数语法：
//~类名(){};



#include<iostream>
using namespace std;

//对象的初始化和清理
//1、构造函数，进行初始化操作
class Person
{
public:
	//构造函数
	//没有返回值，与类名相同
	//构造函数可以有参数，可以发生重载
	//创建对象的时候，构造函数会自动调用，而且只调用一次
	Person()//注意不写void这些的
	{
		cout<<"Person 构造函数的调用"<<endl;
	}
	//析构函数，进行清理操作
	//没有返回值，不写void
	//函数名和类名相同，在名称前加~
	//析构函数不可以有参数，不可以发生重载
	//对象在销毁前，会自动调用析构函数，而且只会调用一次
	~Person()//注意不写void这些的
	{
		cout<<"Person 的析构函数调用"<<endl;
	}
};

//构造和析构函数都是必须有的，如果我们自己不提供，编译器会提供一个空实现的构造和析构函数
void test01()
{
	Person p;//p属于栈上数据，在test01执行完毕后，释放这个对象
}

int main()
{
	//test01();
	Person p;//如果把p写在这里，main函数还没结束，所以只是显示调用的是构造函数调用，当程序执行到按
	                 //下任意键时候，按下任意键，会有瞬间显示析构函数调用字眼。

	system("pause");
	return 0;
}

